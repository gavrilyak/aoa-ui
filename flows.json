[
    {
        "id": "0bd8457dda61dcf8",
        "type": "tab",
        "label": "Compas",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "37c940bbb3d03df0",
        "type": "tab",
        "label": "Calibration",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cbcb4239ed62258f",
        "type": "ui_tab",
        "name": "Home   DF-210 Cell Antenna",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "59345bd6119f3ab3",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "CA DF-210",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "none",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "c0c88598f376b790",
        "type": "ui_group",
        "name": "Compas 4 times per sec",
        "tab": "cbcb4239ed62258f",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "cf3108690ea4a357",
        "type": "ui_tab",
        "name": "Charts",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "fef26fd1ecac0a7a",
        "type": "ui_group",
        "name": "Time",
        "tab": "cf3108690ea4a357",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7155333b10f9baed",
        "type": "ui_tab",
        "name": "Calibration",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "52a3b3d856fb2081",
        "type": "ui_group",
        "name": "Angle",
        "tab": "7155333b10f9baed",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "efc6b7eeb943190c",
        "type": "ui_group",
        "name": "Map",
        "tab": "a6fb18cb9431cb48",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a6fb18cb9431cb48",
        "type": "ui_tab",
        "name": "Map",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "39a5dd8d0dadac75",
        "type": "http request",
        "z": "0bd8457dda61dcf8",
        "name": "angle Non-Coh",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "http://localhost/aoa/angle.bin",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Range",
                "valueType": "other",
                "valueValue": "bytes=-12"
            }
        ],
        "x": 120,
        "y": 180,
        "wires": [
            [
                "65de3f1dbdd4feb4"
            ]
        ]
    },
    {
        "id": "da1939a2086e85ad",
        "type": "debug",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 20,
        "wires": []
    },
    {
        "id": "0ae0ea400dabb5f5",
        "type": "inject",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.25",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "39a5dd8d0dadac75",
                "089e2122efd83298",
                "fbb4f53345438944",
                "732fe241ecde2003",
                "62ef055482ac1e8a",
                "5dc45cfbbe0ecbbd",
                "dab8ea1a46649dba",
                "2fa0a11baf74bd0b"
            ]
        ]
    },
    {
        "id": "65de3f1dbdd4feb4",
        "type": "function",
        "z": "0bd8457dda61dcf8",
        "name": "parseAngleAndPower",
        "func": "//msg.headers[\"content-range\"]: \"bytes 6040764-6040767/6040768\"\n\nlet buf= msg.payload;\nmsg.payload = {\n    angle: buf.readInt16LE(4),\n    power: buf.readInt16LE(6),\n    offset: buf.readInt16LE(8),\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 180,
        "wires": [
            [
                "9575d78c05f42a20",
                "c316438fe45722a7",
                "87793d31dd3dbbc0"
            ]
        ]
    },
    {
        "id": "9575d78c05f42a20",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "name": "get angle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.angle",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 220,
        "wires": [
            [
                "fd0ed138370ba430"
            ]
        ]
    },
    {
        "id": "c316438fe45722a7",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "name": "get power",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.power",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 140,
        "wires": [
            [
                "3481c2cab7ac9cf3"
            ]
        ]
    },
    {
        "id": "3481c2cab7ac9cf3",
        "type": "ui_gauge",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "group": "52a3b3d856fb2081",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Power 1",
        "label": "dB",
        "format": "{{value}}",
        "min": "-100",
        "max": "20",
        "colors": [
            "#1c71d8",
            "#2ec27e",
            "#ed333b"
        ],
        "seg1": "-75",
        "seg2": "-10",
        "diff": false,
        "className": "",
        "x": 820,
        "y": 140,
        "wires": []
    },
    {
        "id": "370203c8c647cb41",
        "type": "http request",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/RPC2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 890,
        "y": 20,
        "wires": [
            [
                "da1939a2086e85ad"
            ]
        ]
    },
    {
        "id": "7c31472cbecff71d",
        "type": "template",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<methodCall>\n    <methodName>set_frequency</methodName>\n    <params>\n      <param>\n        <value>\n            <double>{{payload}}</double>\n        </value>\n       </param>\n    </params>\n</methodCall>\n",
        "output": "str",
        "x": 720,
        "y": 20,
        "wires": [
            [
                "370203c8c647cb41",
                "da1939a2086e85ad"
            ]
        ]
    },
    {
        "id": "1a7c50f528940acf",
        "type": "ui_slider",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "label": "F",
        "tooltip": "",
        "group": "c0c88598f376b790",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "70",
        "max": "6000",
        "step": "0.001",
        "className": "",
        "x": 410,
        "y": 20,
        "wires": [
            [
                "c429f388c5d6c126"
            ]
        ]
    },
    {
        "id": "52162a63ac4f99a9",
        "type": "ui_text_input",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "label": "F,MHz",
        "tooltip": "",
        "group": "c0c88598f376b790",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "1000",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 290,
        "y": 40,
        "wires": [
            [
                "1a7c50f528940acf"
            ]
        ]
    },
    {
        "id": "abb6b0088999c091",
        "type": "ui_slider",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "label": "G",
        "tooltip": "",
        "group": "c0c88598f376b790",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "0",
        "max": "70",
        "step": "1",
        "className": "",
        "x": 490,
        "y": 60,
        "wires": [
            [
                "20132f0f32498a95"
            ]
        ]
    },
    {
        "id": "20132f0f32498a95",
        "type": "template",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<methodCall>\n    <methodName>set_rx_gain</methodName>\n    <params>\n      <param>\n        <value>\n            <double>{{payload}}</double>\n        </value>\n       </param>\n    </params>\n</methodCall>\n",
        "output": "str",
        "x": 720,
        "y": 60,
        "wires": [
            [
                "370203c8c647cb41"
            ]
        ]
    },
    {
        "id": "c429f388c5d6c126",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$number(msg.payload) * 1000000",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 20,
        "wires": [
            [
                "7c31472cbecff71d"
            ]
        ]
    },
    {
        "id": "089e2122efd83298",
        "type": "http request",
        "z": "0bd8457dda61dcf8",
        "name": "angle2 Non-Coh",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "http://localhost/aoa/angle-2.bin",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Range",
                "valueType": "other",
                "valueValue": "bytes=-12"
            }
        ],
        "x": 120,
        "y": 300,
        "wires": [
            [
                "cbb4d484143c5c5e"
            ]
        ]
    },
    {
        "id": "cbb4d484143c5c5e",
        "type": "function",
        "z": "0bd8457dda61dcf8",
        "name": "parseAngleAndPower",
        "func": "//msg.headers[\"content-range\"]: \"bytes 6040764-6040767/6040768\"\n\nlet buf= msg.payload;\nmsg.payload = {\n    angle: buf.readInt16LE(4),\n    power: buf.readInt16LE(6),\n    offset: buf.readInt16LE(8),\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 300,
        "wires": [
            [
                "e6751cdfc504d1d7",
                "0361dcf499d17d68",
                "46129cdf9b15f9ee"
            ]
        ]
    },
    {
        "id": "e6751cdfc504d1d7",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "name": "get angle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.angle",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 340,
        "wires": [
            [
                "2953e86677649a5e"
            ]
        ]
    },
    {
        "id": "0361dcf499d17d68",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "name": "get power",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.power",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 260,
        "wires": [
            [
                "edd3965bcaea9da5"
            ]
        ]
    },
    {
        "id": "edd3965bcaea9da5",
        "type": "ui_gauge",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "group": "52a3b3d856fb2081",
        "order": 8,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Power 2",
        "label": "dB",
        "format": "{{value}}",
        "min": "-100",
        "max": "20",
        "colors": [
            "#1c71d8",
            "#2ec27e",
            "#ed333b"
        ],
        "seg1": "-75",
        "seg2": "-10",
        "diff": false,
        "className": "",
        "x": 820,
        "y": 260,
        "wires": []
    },
    {
        "id": "fbb4f53345438944",
        "type": "http request",
        "z": "0bd8457dda61dcf8",
        "name": "angle3 Non-Coh",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "http://localhost/aoa/angle-3.bin",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Range",
                "valueType": "other",
                "valueValue": "bytes=-12"
            }
        ],
        "x": 120,
        "y": 420,
        "wires": [
            [
                "ee72433db60a1913"
            ]
        ]
    },
    {
        "id": "ee72433db60a1913",
        "type": "function",
        "z": "0bd8457dda61dcf8",
        "name": "parseAngleAndPower",
        "func": "//msg.headers[\"content-range\"]: \"bytes 6040764-6040767/6040768\"\n\nlet buf= msg.payload;\nmsg.payload = {\n    angle: buf.readInt16LE(4),\n    power: buf.readInt16LE(6),\n    offset: buf.readInt16LE(8),\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 420,
        "wires": [
            [
                "dcd54d108621c415",
                "6b90a5cd9d28d9fd",
                "f60734b03104e917"
            ]
        ]
    },
    {
        "id": "dcd54d108621c415",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "name": "get angle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.angle",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 460,
        "wires": [
            [
                "0116dfa02f235232"
            ]
        ]
    },
    {
        "id": "6b90a5cd9d28d9fd",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "name": "get power",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.power",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 380,
        "wires": [
            [
                "6a32a8a01c45eb60"
            ]
        ]
    },
    {
        "id": "6a32a8a01c45eb60",
        "type": "ui_gauge",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "group": "52a3b3d856fb2081",
        "order": 9,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Power 3",
        "label": "dB",
        "format": "{{value}}",
        "min": "-100",
        "max": "20",
        "colors": [
            "#1c71d8",
            "#2ec27e",
            "#ed333b"
        ],
        "seg1": "-75",
        "seg2": "-10",
        "diff": false,
        "className": "",
        "x": 820,
        "y": 380,
        "wires": []
    },
    {
        "id": "fd0ed138370ba430",
        "type": "ui_gauge",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "group": "52a3b3d856fb2081",
        "order": 1,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Angle1 HF",
        "label": "degrees",
        "format": "{{value}}",
        "min": 0,
        "max": "180",
        "colors": [
            "#f66151",
            "#2ec27e",
            "#f66151"
        ],
        "seg1": "25",
        "seg2": "155",
        "diff": false,
        "className": "",
        "x": 830,
        "y": 220,
        "wires": []
    },
    {
        "id": "2953e86677649a5e",
        "type": "ui_gauge",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "group": "52a3b3d856fb2081",
        "order": 2,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Angle2 HF",
        "label": "degrees",
        "format": "{{value}}",
        "min": 0,
        "max": "180",
        "colors": [
            "#f66151",
            "#2ec27e",
            "#f66151"
        ],
        "seg1": "25",
        "seg2": "155",
        "diff": false,
        "className": "",
        "x": 830,
        "y": 340,
        "wires": []
    },
    {
        "id": "0116dfa02f235232",
        "type": "ui_gauge",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "group": "52a3b3d856fb2081",
        "order": 3,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Angle3 HF",
        "label": "degrees",
        "format": "{{value}}",
        "min": 0,
        "max": "180",
        "colors": [
            "#f66151",
            "#2ec27e",
            "#f66151"
        ],
        "seg1": "25",
        "seg2": "155",
        "diff": false,
        "className": "",
        "x": 830,
        "y": 460,
        "wires": []
    },
    {
        "id": "87793d31dd3dbbc0",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "name": "Mem Angle0",
        "rules": [
            {
                "t": "set",
                "p": "angle0",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 180,
        "wires": [
            [
                "4ffb2f19d70e55db",
                "4286dcb382b05067"
            ]
        ]
    },
    {
        "id": "4ffb2f19d70e55db",
        "type": "function",
        "z": "0bd8457dda61dcf8",
        "name": "calcAngle",
        "func": "function calcAngle(anglesWithOffsets) {\n    function toRealAngle(offset, x) {\n        return (((x + 360) % 360) + offset) % 360;\n    }\n\n    function deltaAngle(x, y) {\n        return 180 - Math.abs(Math.abs(x - y) - 180);\n    }\n\n    let sorted = anglesWithOffsets\n        .sort((x, y) => deltaAngle(x.angle, 90) - deltaAngle(y.angle, 90))\n        .slice(0, -1);\n    let real = sorted.map((x) => [\n        { offset: x.offset, angle: x.angle, real: toRealAngle(x.offset, x.angle) },\n        {\n            offset: x.offset,\n            angle: -x.angle,\n            real: toRealAngle(x.offset, -x.angle),\n        },\n    ]);\n    let [best, second] = real;\n    let deltas = best.map((x) =>\n        Math.min(\n            deltaAngle(x.real, second[0].real),\n            deltaAngle(x.real, second[1].real)\n        )\n    );\n    let result = deltas[0] < deltas[1] ? best[0].real : best[1].real;\n    //console.log(\"CA:\", [sorted[0].index, sorted[1].index, result]);\n    return result;\n}\n\nmsg.payload = calcAngle([global.get('angle0'), global.get('angle1'), global.get('angle2')])\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 300,
        "wires": [
            [
                "1a276f740f471e7e",
                "a7444acf248d46c7",
                "d3f946e0cc3c6242"
            ]
        ]
    },
    {
        "id": "46129cdf9b15f9ee",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "name": "Mem Angle1",
        "rules": [
            {
                "t": "set",
                "p": "angle1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 300,
        "wires": [
            [
                "4ffb2f19d70e55db"
            ]
        ]
    },
    {
        "id": "f60734b03104e917",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "name": "Mem Angle2",
        "rules": [
            {
                "t": "set",
                "p": "angle2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 420,
        "wires": [
            [
                "4ffb2f19d70e55db"
            ]
        ]
    },
    {
        "id": "045a668e3817df0f",
        "type": "function",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "function 2",
        "func": "msg.payload = { name: \"CA\", lat: 26.2860863, lon: -80.2916889 }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "d552fe21c49ecc47",
        "type": "inject",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1520,
        "y": 1180,
        "wires": [
            [
                "045a668e3817df0f"
            ]
        ]
    },
    {
        "id": "425ea04b12de0eef",
        "type": "inject",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1680,
        "y": 1240,
        "wires": [
            [
                "050ce9ec8e0e5b70"
            ]
        ]
    },
    {
        "id": "050ce9ec8e0e5b70",
        "type": "function",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "function 3",
        "func": "msg.payload = { name: \"UAV\", lat: 26.3160863, lon: -80.3016889, SIDC: \"Mavic\", icon: \":space_invader:\" }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "91e4df67760d9ecb",
        "type": "inject",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1510,
        "y": 1220,
        "wires": [
            [
                "045a668e3817df0f"
            ]
        ]
    },
    {
        "id": "4d6c0f5f2aecc837",
        "type": "function",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "function 4",
        "func": "msg.payload = { name: \"UAV\", lat: 26.2660863, lon: -80.2716889, SIDC: \"Mavic3\", icon: \":space_invader:\" }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "a84384895c15a505",
        "type": "inject",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "20",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1510,
        "y": 1260,
        "wires": [
            [
                "7ab40b1439dd56fe",
                "050ce9ec8e0e5b70"
            ]
        ]
    },
    {
        "id": "7ab40b1439dd56fe",
        "type": "delay",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1680,
        "y": 1280,
        "wires": [
            [
                "4d6c0f5f2aecc837"
            ]
        ]
    },
    {
        "id": "1a276f740f471e7e",
        "type": "function",
        "z": "0bd8457dda61dcf8",
        "name": "Compas",
        "func": "let center = {\n    lat: 26.2860863, \n    lon: -80.2916889\n}\nlet radius = 0.05;\n\nlet angle = msg.payload / 180 * Math.PI;\nlet lat = center.lat + radius * Math.cos(angle);\nlet lon = center.lon + radius * Math.sin(angle);\n\nmsg.payload = { angle, center, name: \"UAV\", lat: lat, lon: lon, SIDC: \"Mavic\", icon: \":space_invader:\" }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 260,
        "wires": [
            [
                "f5bfee82e2ac558e"
            ]
        ]
    },
    {
        "id": "f5bfee82e2ac558e",
        "type": "debug",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 260,
        "wires": []
    },
    {
        "id": "d596e54121afe26c",
        "type": "ui_gauge",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "group": "c0c88598f376b790",
        "order": 7,
        "width": 3,
        "height": 3,
        "gtype": "compass",
        "title": "DoA 309-535M",
        "label": "Degree",
        "format": "{{value}}",
        "min": 0,
        "max": "360",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1180,
        "y": 1100,
        "wires": []
    },
    {
        "id": "4286dcb382b05067",
        "type": "debug",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 180,
        "wires": []
    },
    {
        "id": "8c5e56d4758c7d25",
        "type": "inject",
        "z": "0bd8457dda61dcf8",
        "name": "Start Freq 535",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "535",
        "payloadType": "num",
        "x": 120,
        "y": 20,
        "wires": [
            [
                "1a7c50f528940acf",
                "52162a63ac4f99a9"
            ]
        ]
    },
    {
        "id": "a7444acf248d46c7",
        "type": "ui_chart",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "",
        "group": "fef26fd1ecac0a7a",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Signal Direction Non-Coherent Method",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "360",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1070,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "72606d05f808bbdb",
        "type": "ui_chart",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "group": "fef26fd1ecac0a7a",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Signal Direction 309-535M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "360",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1060,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "1f4655cf429262ac",
        "type": "ui_chart",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "group": "fef26fd1ecac0a7a",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Power of Signal",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-100",
        "ymax": "20",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1020,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "c0fab36df52812bf",
        "type": "ui_chart",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "group": "c0c88598f376b790",
        "order": 6,
        "width": 3,
        "height": 3,
        "label": "DoA 120-309M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "360",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1180,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "09f6ab3a1f68aa4d",
        "type": "ui_chart",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "group": "c0c88598f376b790",
        "order": 8,
        "width": 3,
        "height": 3,
        "label": "DoA 309-535M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "360",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1180,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "2a394f728c6479e3",
        "type": "ui_gauge",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "group": "c0c88598f376b790",
        "order": 5,
        "width": 3,
        "height": 3,
        "gtype": "compass",
        "title": "DoA 120-309M",
        "label": "Degree",
        "format": "{{value}}",
        "min": 0,
        "max": "360",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1180,
        "y": 1240,
        "wires": []
    },
    {
        "id": "732fe241ecde2003",
        "type": "http request",
        "z": "0bd8457dda61dcf8",
        "name": "angle360 Coh",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "http://localhost/aoa/angle-360.bin",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Range",
                "valueType": "other",
                "valueValue": "bytes=-12"
            }
        ],
        "x": 120,
        "y": 1060,
        "wires": [
            [
                "e5e7c1be254c2e68"
            ]
        ]
    },
    {
        "id": "e5e7c1be254c2e68",
        "type": "function",
        "z": "0bd8457dda61dcf8",
        "name": "parseAngleAndPower",
        "func": "//msg.headers[\"content-range\"]: \"bytes 6040764-6040767/6040768\"\n\nlet buf= msg.payload;\nmsg.payload = {\n    angle: buf.readInt16LE(4),\n    power: buf.readInt16LE(6),\n    offset: buf.readInt16LE(8),\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1060,
        "wires": [
            [
                "0aec400b0c996d3d",
                "a19db888ac5af038",
                "5b6f2f976ef9c9fd"
            ]
        ]
    },
    {
        "id": "0aec400b0c996d3d",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "name": "get power",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.power",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1040,
        "wires": [
            [
                "1f4655cf429262ac",
                "fefd27dcca19f6a3",
                "4dc539c20d88d579"
            ]
        ]
    },
    {
        "id": "a19db888ac5af038",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "name": "get angle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.angle",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1080,
        "wires": [
            [
                "d596e54121afe26c",
                "09f6ab3a1f68aa4d",
                "72606d05f808bbdb"
            ]
        ]
    },
    {
        "id": "fefd27dcca19f6a3",
        "type": "ui_gauge",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "group": "c0c88598f376b790",
        "order": 9,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "RF Power",
        "label": "dBm",
        "format": "{{value}}",
        "min": "-100",
        "max": "20",
        "colors": [
            "#1a5fb4",
            "#26a269",
            "#ca3838"
        ],
        "seg1": "-75",
        "seg2": "-10",
        "diff": false,
        "className": "",
        "x": 1160,
        "y": 980,
        "wires": []
    },
    {
        "id": "4dc539c20d88d579",
        "type": "ui_chart",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "group": "c0c88598f376b790",
        "order": 10,
        "width": 3,
        "height": 3,
        "label": "RF Power",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-100",
        "ymax": "20",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1160,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "55923f8ea0be1bff",
        "type": "ui_text_input",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "label": "Gain,dB",
        "tooltip": "",
        "group": "c0c88598f376b790",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "1000",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 300,
        "y": 80,
        "wires": [
            [
                "abb6b0088999c091"
            ]
        ]
    },
    {
        "id": "bb1b6e8d17f9fc48",
        "type": "inject",
        "z": "0bd8457dda61dcf8",
        "name": "Start Gain 40",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "40",
        "payloadType": "num",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "55923f8ea0be1bff",
                "abb6b0088999c091"
            ]
        ]
    },
    {
        "id": "62ef055482ac1e8a",
        "type": "http request",
        "z": "0bd8457dda61dcf8",
        "name": "angle360-c Coh",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "http://localhost/aoa/angle-c.bin",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Range",
                "valueType": "other",
                "valueValue": "bytes=-12"
            }
        ],
        "x": 120,
        "y": 1180,
        "wires": [
            [
                "7779d52a91fe13b1"
            ]
        ]
    },
    {
        "id": "7779d52a91fe13b1",
        "type": "function",
        "z": "0bd8457dda61dcf8",
        "name": "parseAngleAndPower",
        "func": "//msg.headers[\"content-range\"]: \"bytes 6040764-6040767/6040768\"\n\nlet buf= msg.payload;\nmsg.payload = {\n    angle: buf.readInt16LE(4),\n    power: buf.readInt16LE(6),\n    offset: buf.readInt16LE(8),\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1180,
        "wires": [
            [
                "6156106a2fc6a705",
                "09d8c28fb13c0da3"
            ]
        ]
    },
    {
        "id": "6156106a2fc6a705",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "get power",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.power",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "5dc45cfbbe0ecbbd",
        "type": "http request",
        "z": "0bd8457dda61dcf8",
        "name": "angleC1 Non-Coh",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "http://localhost/aoa/angle-c1.bin",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Range",
                "valueType": "other",
                "valueValue": "bytes=-12"
            }
        ],
        "x": 130,
        "y": 580,
        "wires": [
            [
                "a1870d5d34e955d4"
            ]
        ]
    },
    {
        "id": "a1870d5d34e955d4",
        "type": "function",
        "z": "0bd8457dda61dcf8",
        "name": "parseAngleAndPower",
        "func": "//msg.headers[\"content-range\"]: \"bytes 6040764-6040767/6040768\"\n\nlet buf= msg.payload;\nmsg.payload = {\n    angle: buf.readInt16LE(4),\n    power: buf.readInt16LE(6),\n    offset: buf.readInt16LE(8),\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 580,
        "wires": [
            [
                "cb6095331baed0c6",
                "db73899fbda0d65f",
                "8710319e1df64e70"
            ]
        ]
    },
    {
        "id": "cb6095331baed0c6",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "name": "get angle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.angle",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 620,
        "wires": [
            [
                "56c0f0f7b0fd6af4"
            ]
        ]
    },
    {
        "id": "db73899fbda0d65f",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "get power",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.power",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "dab8ea1a46649dba",
        "type": "http request",
        "z": "0bd8457dda61dcf8",
        "name": "angleC2 Non-Coh",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "http://localhost/aoa/angle-c2.bin",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Range",
                "valueType": "other",
                "valueValue": "bytes=-12"
            }
        ],
        "x": 130,
        "y": 700,
        "wires": [
            [
                "25a912a72b48dad0"
            ]
        ]
    },
    {
        "id": "25a912a72b48dad0",
        "type": "function",
        "z": "0bd8457dda61dcf8",
        "name": "parseAngleAndPower",
        "func": "//msg.headers[\"content-range\"]: \"bytes 6040764-6040767/6040768\"\n\nlet buf= msg.payload;\nmsg.payload = {\n    angle: buf.readInt16LE(4),\n    power: buf.readInt16LE(6),\n    offset: buf.readInt16LE(8),\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 700,
        "wires": [
            [
                "b3ce371c8ce0288c",
                "7a90b30399967003",
                "67d907291db902f6"
            ]
        ]
    },
    {
        "id": "b3ce371c8ce0288c",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "name": "get angle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.angle",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 740,
        "wires": [
            [
                "bc567ca7c6aee2b2"
            ]
        ]
    },
    {
        "id": "7a90b30399967003",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "get power",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.power",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "2fa0a11baf74bd0b",
        "type": "http request",
        "z": "0bd8457dda61dcf8",
        "name": "angleC3 Non-Coh",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "http://localhost/aoa/angle-c3.bin",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Range",
                "valueType": "other",
                "valueValue": "bytes=-12"
            }
        ],
        "x": 130,
        "y": 820,
        "wires": [
            [
                "f7577c6988514e78"
            ]
        ]
    },
    {
        "id": "f7577c6988514e78",
        "type": "function",
        "z": "0bd8457dda61dcf8",
        "name": "parseAngleAndPower",
        "func": "//msg.headers[\"content-range\"]: \"bytes 6040764-6040767/6040768\"\n\nlet buf= msg.payload;\nmsg.payload = {\n    angle: buf.readInt16LE(4),\n    power: buf.readInt16LE(6),\n    offset: buf.readInt16LE(8),\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 820,
        "wires": [
            [
                "d745b81c1680784d",
                "fd46a5eadbf175d5",
                "99bbb4101d39637f"
            ]
        ]
    },
    {
        "id": "d745b81c1680784d",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "name": "get angle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.angle",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 860,
        "wires": [
            [
                "d20a712684079a6c"
            ]
        ]
    },
    {
        "id": "fd46a5eadbf175d5",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "get power",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.power",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "56c0f0f7b0fd6af4",
        "type": "ui_gauge",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "group": "52a3b3d856fb2081",
        "order": 4,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Angle1 LF",
        "label": "degrees",
        "format": "{{value}}",
        "min": 0,
        "max": "180",
        "colors": [
            "#f66151",
            "#2ec27e",
            "#f66151"
        ],
        "seg1": "25",
        "seg2": "155",
        "diff": false,
        "className": "",
        "x": 830,
        "y": 620,
        "wires": []
    },
    {
        "id": "bc567ca7c6aee2b2",
        "type": "ui_gauge",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "group": "52a3b3d856fb2081",
        "order": 5,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Angle2 LF",
        "label": "degrees",
        "format": "{{value}}",
        "min": 0,
        "max": "180",
        "colors": [
            "#f66151",
            "#2ec27e",
            "#f66151"
        ],
        "seg1": "25",
        "seg2": "155",
        "diff": false,
        "className": "",
        "x": 830,
        "y": 740,
        "wires": []
    },
    {
        "id": "d20a712684079a6c",
        "type": "ui_gauge",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "group": "52a3b3d856fb2081",
        "order": 6,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Angle3 LF",
        "label": "degrees",
        "format": "{{value}}",
        "min": 0,
        "max": "180",
        "colors": [
            "#f66151",
            "#2ec27e",
            "#f66151"
        ],
        "seg1": "25",
        "seg2": "155",
        "diff": false,
        "className": "",
        "x": 830,
        "y": 860,
        "wires": []
    },
    {
        "id": "8710319e1df64e70",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "Mem Angle0c",
        "rules": [
            {
                "t": "set",
                "p": "angle0c",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 580,
        "wires": [
            [
                "c2a876fe3a044a49",
                "60af9c50fac5ef91"
            ]
        ]
    },
    {
        "id": "c2a876fe3a044a49",
        "type": "function",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "calcAngle",
        "func": "function calcAngle(anglesWithOffsets) {\n    function toRealAngle(offset, x) {\n        return (((x + 360) % 360) + offset) % 360;\n    }\n\n    function deltaAngle(x, y) {\n        return 180 - Math.abs(Math.abs(x - y) - 180);\n    }\n\n    let sorted = anglesWithOffsets\n        .sort((x, y) => deltaAngle(x.angle, 90) - deltaAngle(y.angle, 90))\n        .slice(0, -1);\n    let real = sorted.map((x) => [\n        { offset: x.offset, angle: x.angle, real: toRealAngle(x.offset, x.angle) },\n        {\n            offset: x.offset,\n            angle: -x.angle,\n            real: toRealAngle(x.offset, -x.angle),\n        },\n    ]);\n    let [best, second] = real;\n    let deltas = best.map((x) =>\n        Math.min(\n            deltaAngle(x.real, second[0].real),\n            deltaAngle(x.real, second[1].real)\n        )\n    );\n    let result = deltas[0] < deltas[1] ? best[0].real : best[1].real;\n    //console.log(\"CA:\", [sorted[0].index, sorted[1].index, result]);\n    return result;\n}\n\nmsg.payload = calcAngle([global.get('angle0c'), global.get('angle1c'), global.get('angle2c')])\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 700,
        "wires": [
            [
                "10b6cdfde3a7ce06"
            ]
        ]
    },
    {
        "id": "67d907291db902f6",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "Mem Angle1c",
        "rules": [
            {
                "t": "set",
                "p": "angle1c",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 700,
        "wires": [
            [
                "c2a876fe3a044a49"
            ]
        ]
    },
    {
        "id": "99bbb4101d39637f",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "Mem Angle2c",
        "rules": [
            {
                "t": "set",
                "p": "angle2c",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 820,
        "wires": [
            [
                "c2a876fe3a044a49"
            ]
        ]
    },
    {
        "id": "60af9c50fac5ef91",
        "type": "debug",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 580,
        "wires": []
    },
    {
        "id": "a80321d38e85328a",
        "type": "comment",
        "z": "0bd8457dda61dcf8",
        "name": "Calibration",
        "info": "",
        "x": 820,
        "y": 100,
        "wires": []
    },
    {
        "id": "b5141eb5bea660c2",
        "type": "comment",
        "z": "0bd8457dda61dcf8",
        "name": "Charts",
        "info": "",
        "x": 970,
        "y": 100,
        "wires": []
    },
    {
        "id": "a7986a1ffaebcbf9",
        "type": "comment",
        "z": "0bd8457dda61dcf8",
        "name": "Home",
        "info": "",
        "x": 1170,
        "y": 100,
        "wires": []
    },
    {
        "id": "38b98eb6aa145756",
        "type": "comment",
        "z": "0bd8457dda61dcf8",
        "name": "Calibration",
        "info": "",
        "x": 820,
        "y": 900,
        "wires": []
    },
    {
        "id": "c33a5b59d377acca",
        "type": "comment",
        "z": "0bd8457dda61dcf8",
        "name": "Charts",
        "info": "",
        "x": 970,
        "y": 900,
        "wires": []
    },
    {
        "id": "c234ef605bf44e27",
        "type": "comment",
        "z": "0bd8457dda61dcf8",
        "name": "Home",
        "info": "",
        "x": 1150,
        "y": 900,
        "wires": []
    },
    {
        "id": "d3f946e0cc3c6242",
        "type": "ui_gauge",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "",
        "group": "c0c88598f376b790",
        "order": 11,
        "width": 3,
        "height": 3,
        "gtype": "compass",
        "title": "DoA N-Coherent",
        "label": "Degree",
        "format": "{{value}}",
        "min": 0,
        "max": "360",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1200,
        "y": 340,
        "wires": []
    },
    {
        "id": "10b6cdfde3a7ce06",
        "type": "ui_gauge",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "",
        "group": "c0c88598f376b790",
        "order": 12,
        "width": 3,
        "height": 3,
        "gtype": "compass",
        "title": "DoA N-CoherentC",
        "label": "Degree",
        "format": "{{value}}",
        "min": 0,
        "max": "360",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1190,
        "y": 700,
        "wires": []
    },
    {
        "id": "467e754e59ba7b4d",
        "type": "ui_chart",
        "z": "0bd8457dda61dcf8",
        "name": "",
        "group": "fef26fd1ecac0a7a",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Signal Direction 120-309M",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "360",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1060,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "5b6f2f976ef9c9fd",
        "type": "change",
        "z": "0bd8457dda61dcf8",
        "d": true,
        "name": "get offset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.offset",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "09d8c28fb13c0da3",
        "type": "function",
        "z": "0bd8457dda61dcf8",
        "name": "Function toRealAngle(Offset)",
        "func": "function toRealAngle(offset, x) {\n    return (((x + 360) % 360) + offset) % 360;\n}\nmsg.payload = toRealAngle(msg.payload.offset, msg.payload.angle)\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1200,
        "wires": [
            [
                "c0fab36df52812bf",
                "2a394f728c6479e3",
                "467e754e59ba7b4d"
            ]
        ]
    },
    {
        "id": "2f5bd29957c47a8f",
        "type": "ui_text_input",
        "z": "37c940bbb3d03df0",
        "name": "",
        "label": "F Cal, MHz",
        "tooltip": "",
        "group": "52a3b3d856fb2081",
        "order": 10,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "1000",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 390,
        "y": 60,
        "wires": [
            [
                "d6a4374d04f34d02"
            ]
        ]
    },
    {
        "id": "d6a4374d04f34d02",
        "type": "ui_slider",
        "z": "37c940bbb3d03df0",
        "name": "",
        "label": "F Cal",
        "tooltip": "",
        "group": "52a3b3d856fb2081",
        "order": 11,
        "width": 3,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "70",
        "max": "6000",
        "step": "0.001",
        "className": "",
        "x": 570,
        "y": 40,
        "wires": [
            [
                "808d216c42857ede"
            ]
        ]
    },
    {
        "id": "808d216c42857ede",
        "type": "change",
        "z": "37c940bbb3d03df0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$number(msg.payload) * 1000000",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 40,
        "wires": [
            [
                "dc5f2f228404ad52"
            ]
        ]
    },
    {
        "id": "dc5f2f228404ad52",
        "type": "template",
        "z": "37c940bbb3d03df0",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<methodCall>\n    <methodName>set_frequency</methodName>\n    <params>\n      <param>\n        <value>\n            <double>{{payload}}</double>\n        </value>\n       </param>\n    </params>\n</methodCall>\n",
        "output": "str",
        "x": 880,
        "y": 40,
        "wires": [
            [
                "f5fc4ede96d18804"
            ]
        ]
    },
    {
        "id": "f5fc4ede96d18804",
        "type": "http request",
        "z": "37c940bbb3d03df0",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8090/RPC2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1050,
        "y": 180,
        "wires": [
            [
                "f57d97a69f370c97"
            ]
        ]
    },
    {
        "id": "cc9946fbd0851dbf",
        "type": "inject",
        "z": "37c940bbb3d03df0",
        "name": "Start Freq 500",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "500",
        "payloadType": "num",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "d6a4374d04f34d02",
                "2f5bd29957c47a8f"
            ]
        ]
    },
    {
        "id": "c10c81089d8187da",
        "type": "ui_text_input",
        "z": "37c940bbb3d03df0",
        "name": "",
        "label": "ATT Cal, dB",
        "tooltip": "",
        "group": "52a3b3d856fb2081",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": "1000",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 530,
        "y": 120,
        "wires": [
            [
                "4ef8de896d9ba931"
            ]
        ]
    },
    {
        "id": "4ef8de896d9ba931",
        "type": "ui_slider",
        "z": "37c940bbb3d03df0",
        "name": "",
        "label": "ATT Cal",
        "tooltip": "",
        "group": "52a3b3d856fb2081",
        "order": 13,
        "width": 3,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "0",
        "max": "89.75",
        "step": "0.25",
        "className": "",
        "x": 740,
        "y": 100,
        "wires": [
            [
                "770b7cac7983d1c9"
            ]
        ]
    },
    {
        "id": "770b7cac7983d1c9",
        "type": "template",
        "z": "37c940bbb3d03df0",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<methodCall>\n    <methodName>set_att_tx1</methodName>\n    <params>\n      <param>\n        <value>\n            <double>{{payload}}</double>\n        </value>\n       </param>\n    </params>\n</methodCall>\n",
        "output": "str",
        "x": 880,
        "y": 100,
        "wires": [
            [
                "f5fc4ede96d18804"
            ]
        ]
    },
    {
        "id": "86f4fccc781a127a",
        "type": "inject",
        "z": "37c940bbb3d03df0",
        "name": "Start Attenuator 89.75",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "89.75",
        "payloadType": "num",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "4ef8de896d9ba931",
                "c10c81089d8187da"
            ]
        ]
    },
    {
        "id": "ea775e8fc4c15881",
        "type": "template",
        "z": "37c940bbb3d03df0",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<methodCall>\n    <methodName>set_tx_enable</methodName>\n    <params>\n      <param>\n        <value>\n            <int>{{payload}}</int>\n        </value>\n       </param>\n    </params>\n</methodCall>\n",
        "output": "str",
        "x": 880,
        "y": 180,
        "wires": [
            [
                "f5fc4ede96d18804"
            ]
        ]
    },
    {
        "id": "b587d44deb51ed07",
        "type": "inject",
        "z": "37c940bbb3d03df0",
        "name": "Start Cal TX En/Dis",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "254f9303ef05eb7f"
            ]
        ]
    },
    {
        "id": "254f9303ef05eb7f",
        "type": "ui_switch",
        "z": "37c940bbb3d03df0",
        "name": "",
        "label": "Cal En/Dis",
        "tooltip": "",
        "group": "52a3b3d856fb2081",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 310,
        "y": 180,
        "wires": [
            [
                "ea775e8fc4c15881",
                "18f51fa3f4279670"
            ]
        ]
    },
    {
        "id": "f57d97a69f370c97",
        "type": "debug",
        "z": "37c940bbb3d03df0",
        "d": true,
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 40,
        "wires": []
    },
    {
        "id": "18f51fa3f4279670",
        "type": "switch",
        "z": "37c940bbb3d03df0",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 260,
        "wires": [
            [
                "43700747a4a37461"
            ],
            [
                "34798f7c0cee4d0c"
            ]
        ]
    },
    {
        "id": "34798f7c0cee4d0c",
        "type": "change",
        "z": "37c940bbb3d03df0",
        "name": "ATT=0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 280,
        "wires": [
            [
                "c10c81089d8187da",
                "4ef8de896d9ba931"
            ]
        ]
    },
    {
        "id": "43700747a4a37461",
        "type": "change",
        "z": "37c940bbb3d03df0",
        "name": "ATT=89.75",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "89.75",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 240,
        "wires": [
            [
                "c10c81089d8187da",
                "4ef8de896d9ba931"
            ]
        ]
    }
]